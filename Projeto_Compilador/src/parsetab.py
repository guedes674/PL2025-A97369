
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightTHENELSEleftORORELSEleftANDANDTHENnonassocEQUALSNELTGTLEGEINleftPLUSMINUSleftTIMESDIVIDEDIVMODrightUMINUSNOTAND ANDTHEN ARRAY ASSIGN BEGIN BOOLEAN BYTE CHAR COLON COMMA CONST DIV DIVIDE DO DOT DOUBLE DOWNTO ELSE END EQUALS FALSE FOR FUNCTION GE GT ID IF IN INTEGER LABEL LBRACKET LE LONGINT LPAREN LT MINUS MOD NE NOT NUMBER OF OR ORELSE PLUS PROCEDURE PROGRAM RBRACKET READ READLN REAL RPAREN SEMICOLON SHORTINT SINGLE STRING THEN TIMES TO TRUE UMINUS UNTIL VAR WHILE WITH WORD WRITE WRITELNprogram : header block DOTheader : PROGRAM ID LPAREN id_list RPAREN SEMICOLON\n| PROGRAM ID SEMICOLONid_list : id_list COMMA ID\n| IDempty :block : declarations compound_statementdeclarations : declarations variable_declaration\n| declarations function_declaration\n| declarations procedure_declaration\n| emptyvariable_declaration : VAR variable_list SEMICOLONfunction_declaration : FUNCTION ID parameter_list COLON type SEMICOLON block SEMICOLONprocedure_declaration : PROCEDURE ID parameter_list SEMICOLON block SEMICOLONvariable_list : variable_list SEMICOLON variable\n| variablevariable : id_list COLON typetype : ID\n| INTEGER\n| REAL\n| BOOLEAN\n| CHAR\n| BYTE\n| WORD\n| LONGINT\n| SHORTINT\n| SINGLE\n| DOUBLE\n| STRING\n| ARRAY LBRACKET NUMBER DOT DOT NUMBER RBRACKET OF typefield_list : field_list SEMICOLON field\n| fieldfield : id_list COLON typeparameter_list : LPAREN parameter_section_list RPAREN\n| emptyparameter_section_list : parameter_section_list SEMICOLON parameter_section\n| parameter_sectionparameter_section : id_list COLON type\n| VAR id_list COLON typecompound_statement : BEGIN statement_list ENDstatement_list : statement_list SEMICOLON statement\n| statementstatement : assignment_statement\n| expression\n| compound_statement\n| io_statement\n| if_statement        \n| while_statement  \n| for_statement       \n| emptyassignment_statement : ID ASSIGN expressionexpression : additive_expression\n| expression EQUALS additive_expression\n| expression NE additive_expression\n| expression LT additive_expression\n| expression GT additive_expression\n| expression LE additive_expression\n| expression GE additive_expression\n| expression IN additive_expressionadditive_expression : multiplicative_expression\n| additive_expression PLUS multiplicative_expression\n| additive_expression MINUS multiplicative_expression\n| additive_expression OR multiplicative_expression\n| additive_expression ORELSE multiplicative_expressionmultiplicative_expression : factor \n| multiplicative_expression TIMES factor\n| multiplicative_expression DIVIDE factor\n| multiplicative_expression DIV factor\n| multiplicative_expression MOD factor\n| multiplicative_expression AND factor\n| multiplicative_expression ANDTHEN factorfactor : NUMBER\n| STRING\n| ID\n| TRUE\n| FALSE\n| LPAREN expression RPAREN\n| factor LBRACKET expression RBRACKET\n| ID LPAREN expression_list RPAREN\n| MINUS factor %prec UMINUS\n| NOT factor\nexpression_list : expression_list COMMA expression\n| expression\n| emptyio_statement : WRITE LPAREN expression_list RPAREN\n| WRITELN LPAREN expression_list RPAREN\n| READ LPAREN expression_list RPAREN\n| READLN LPAREN expression_list RPARENif_statement : IF expression THEN statement ELSE statement\n| IF expression THEN statementwhile_statement : WHILE expression DO statementfor_statement : FOR ID ASSIGN expression TO expression DO statement\n| FOR ID ASSIGN expression DOWNTO expression DO statement'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,8,],[0,-1,]),'BEGIN':([2,5,6,10,11,12,13,18,55,87,116,117,147,148,167,171,175,182,183,185,],[-6,13,-11,-8,-9,-10,13,-3,13,-12,13,13,-6,-2,13,-6,-14,13,13,-13,]),'VAR':([2,5,6,10,11,12,18,87,91,147,148,162,171,175,185,],[-6,14,-11,-8,-9,-10,-3,-12,146,-6,-2,146,-6,-14,-13,]),'FUNCTION':([2,5,6,10,11,12,18,87,147,148,171,175,185,],[-6,15,-11,-8,-9,-10,-3,-12,-6,-2,-6,-14,-13,]),'PROCEDURE':([2,5,6,10,11,12,18,87,147,148,171,175,185,],[-6,16,-11,-8,-9,-10,-3,-12,-6,-2,-6,-14,-13,]),'ID':([3,13,14,15,16,17,32,36,37,38,40,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,81,82,83,85,87,88,89,91,116,117,118,142,146,150,162,163,167,168,169,174,182,183,190,],[7,29,50,51,52,50,71,71,71,77,71,71,29,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,50,128,141,50,29,29,71,128,50,71,50,128,29,71,71,128,29,29,128,]),'DOT':([4,9,54,170,179,],[8,-7,-40,179,184,]),'LPAREN':([7,13,29,31,32,33,34,35,36,37,40,46,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,78,79,80,81,82,83,85,116,117,118,150,167,168,169,182,183,],[17,32,64,69,32,72,73,74,32,32,32,32,91,91,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,64,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'SEMICOLON':([7,9,13,19,20,21,22,23,24,25,26,27,28,29,30,39,41,42,43,44,45,47,48,52,54,55,71,84,86,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,112,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,144,149,151,152,153,154,155,156,158,160,161,165,167,172,173,176,180,181,182,183,186,187,191,],[18,-7,-6,55,-42,-43,-44,-45,-46,-47,-48,-49,-50,-74,-52,-60,-65,-72,-73,-75,-76,87,-16,-6,-40,-6,-74,-80,-81,-35,147,148,-41,-53,-54,-55,-56,-57,-58,-59,-51,-61,-62,-63,-64,-77,-6,-6,-66,-67,-68,-69,-70,-71,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,162,-37,-79,-85,-86,-87,-88,-90,-91,-78,171,-34,175,-6,-36,-38,-89,185,-39,-6,-6,-92,-93,-30,]),'WRITE':([13,55,116,117,167,182,183,],[31,31,31,31,31,31,31,]),'WRITELN':([13,55,116,117,167,182,183,],[33,33,33,33,33,33,33,]),'READ':([13,55,116,117,167,182,183,],[34,34,34,34,34,34,34,]),'READLN':([13,55,116,117,167,182,183,],[35,35,35,35,35,35,35,]),'IF':([13,55,116,117,167,182,183,],[36,36,36,36,36,36,36,]),'WHILE':([13,55,116,117,167,182,183,],[37,37,37,37,37,37,37,]),'FOR':([13,55,116,117,167,182,183,],[38,38,38,38,38,38,38,]),'END':([13,19,20,21,22,23,24,25,26,27,28,29,30,39,41,42,43,44,45,54,55,71,84,86,95,96,97,98,99,100,101,102,103,107,108,109,110,112,116,117,119,120,121,122,123,124,149,151,152,153,154,155,156,158,167,176,182,183,186,187,],[-6,54,-42,-43,-44,-45,-46,-47,-48,-49,-50,-74,-52,-60,-65,-72,-73,-75,-76,-40,-6,-74,-80,-81,-41,-53,-54,-55,-56,-57,-58,-59,-51,-61,-62,-63,-64,-77,-6,-6,-66,-67,-68,-69,-70,-71,-79,-85,-86,-87,-88,-90,-91,-78,-6,-89,-6,-6,-92,-93,]),'NUMBER':([13,32,36,37,40,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,81,82,83,85,116,117,118,150,159,167,168,169,182,183,184,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,170,42,42,42,42,42,188,]),'STRING':([13,32,36,37,40,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,81,82,83,85,88,116,117,118,142,150,163,167,168,169,174,182,183,190,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,139,43,43,43,139,43,139,43,43,43,139,43,43,139,]),'TRUE':([13,32,36,37,40,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,81,82,83,85,116,117,118,150,167,168,169,182,183,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([13,32,36,37,40,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,81,82,83,85,116,117,118,150,167,168,169,182,183,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'MINUS':([13,29,30,32,36,37,39,40,41,42,43,44,45,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,78,79,80,81,82,83,84,85,86,96,97,98,99,100,101,102,107,108,109,110,112,116,117,118,119,120,121,122,123,124,149,150,158,167,168,169,182,183,],[40,-74,66,40,40,40,-60,40,-65,-72,-73,-75,-76,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-74,40,40,40,40,40,40,40,40,40,-80,40,-81,66,66,66,66,66,66,66,-61,-62,-63,-64,-77,40,40,40,-66,-67,-68,-69,-70,-71,-79,40,-78,40,40,40,40,40,]),'NOT':([13,32,36,37,40,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,81,82,83,85,116,117,118,150,167,168,169,182,183,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ELSE':([21,22,23,24,25,26,27,28,29,30,39,41,42,43,44,45,54,71,84,86,96,97,98,99,100,101,102,103,107,108,109,110,112,116,117,119,120,121,122,123,124,149,151,152,153,154,155,156,158,167,176,182,183,186,187,],[-43,-44,-45,-46,-47,-48,-49,-50,-74,-52,-60,-65,-72,-73,-75,-76,-40,-74,-80,-81,-53,-54,-55,-56,-57,-58,-59,-51,-61,-62,-63,-64,-77,-6,-6,-66,-67,-68,-69,-70,-71,-79,-85,-86,-87,-88,167,-91,-78,-6,-89,-6,-6,-92,-93,]),'EQUALS':([22,29,30,39,41,42,43,44,45,70,71,75,76,84,86,96,97,98,99,100,101,102,103,105,107,108,109,110,112,119,120,121,122,123,124,125,149,157,158,166,177,178,],[56,-74,-52,-60,-65,-72,-73,-75,-76,56,-74,56,56,-80,-81,-53,-54,-55,-56,-57,-58,-59,56,56,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,56,-79,56,-78,56,56,56,]),'NE':([22,29,30,39,41,42,43,44,45,70,71,75,76,84,86,96,97,98,99,100,101,102,103,105,107,108,109,110,112,119,120,121,122,123,124,125,149,157,158,166,177,178,],[57,-74,-52,-60,-65,-72,-73,-75,-76,57,-74,57,57,-80,-81,-53,-54,-55,-56,-57,-58,-59,57,57,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,57,-79,57,-78,57,57,57,]),'LT':([22,29,30,39,41,42,43,44,45,70,71,75,76,84,86,96,97,98,99,100,101,102,103,105,107,108,109,110,112,119,120,121,122,123,124,125,149,157,158,166,177,178,],[58,-74,-52,-60,-65,-72,-73,-75,-76,58,-74,58,58,-80,-81,-53,-54,-55,-56,-57,-58,-59,58,58,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,58,-79,58,-78,58,58,58,]),'GT':([22,29,30,39,41,42,43,44,45,70,71,75,76,84,86,96,97,98,99,100,101,102,103,105,107,108,109,110,112,119,120,121,122,123,124,125,149,157,158,166,177,178,],[59,-74,-52,-60,-65,-72,-73,-75,-76,59,-74,59,59,-80,-81,-53,-54,-55,-56,-57,-58,-59,59,59,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,59,-79,59,-78,59,59,59,]),'LE':([22,29,30,39,41,42,43,44,45,70,71,75,76,84,86,96,97,98,99,100,101,102,103,105,107,108,109,110,112,119,120,121,122,123,124,125,149,157,158,166,177,178,],[60,-74,-52,-60,-65,-72,-73,-75,-76,60,-74,60,60,-80,-81,-53,-54,-55,-56,-57,-58,-59,60,60,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,60,-79,60,-78,60,60,60,]),'GE':([22,29,30,39,41,42,43,44,45,70,71,75,76,84,86,96,97,98,99,100,101,102,103,105,107,108,109,110,112,119,120,121,122,123,124,125,149,157,158,166,177,178,],[61,-74,-52,-60,-65,-72,-73,-75,-76,61,-74,61,61,-80,-81,-53,-54,-55,-56,-57,-58,-59,61,61,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,61,-79,61,-78,61,61,61,]),'IN':([22,29,30,39,41,42,43,44,45,70,71,75,76,84,86,96,97,98,99,100,101,102,103,105,107,108,109,110,112,119,120,121,122,123,124,125,149,157,158,166,177,178,],[62,-74,-52,-60,-65,-72,-73,-75,-76,62,-74,62,62,-80,-81,-53,-54,-55,-56,-57,-58,-59,62,62,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,62,-79,62,-78,62,62,62,]),'ASSIGN':([29,77,],[63,118,]),'LBRACKET':([29,41,42,43,44,45,71,84,86,112,119,120,121,122,123,124,140,149,158,],[-74,85,-72,-73,-75,-76,-74,-80,-81,-77,85,85,85,85,85,85,159,-79,-78,]),'TIMES':([29,39,41,42,43,44,45,71,84,86,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,78,-65,-72,-73,-75,-76,-74,-80,-81,78,78,78,78,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'DIVIDE':([29,39,41,42,43,44,45,71,84,86,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,79,-65,-72,-73,-75,-76,-74,-80,-81,79,79,79,79,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'DIV':([29,39,41,42,43,44,45,71,84,86,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,80,-65,-72,-73,-75,-76,-74,-80,-81,80,80,80,80,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'MOD':([29,39,41,42,43,44,45,71,84,86,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,81,-65,-72,-73,-75,-76,-74,-80,-81,81,81,81,81,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'AND':([29,39,41,42,43,44,45,71,84,86,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,82,-65,-72,-73,-75,-76,-74,-80,-81,82,82,82,82,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'ANDTHEN':([29,39,41,42,43,44,45,71,84,86,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,83,-65,-72,-73,-75,-76,-74,-80,-81,83,83,83,83,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'PLUS':([29,30,39,41,42,43,44,45,71,84,86,96,97,98,99,100,101,102,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,65,-60,-65,-72,-73,-75,-76,-74,-80,-81,65,65,65,65,65,65,65,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'OR':([29,30,39,41,42,43,44,45,71,84,86,96,97,98,99,100,101,102,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,67,-60,-65,-72,-73,-75,-76,-74,-80,-81,67,67,67,67,67,67,67,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'ORELSE':([29,30,39,41,42,43,44,45,71,84,86,96,97,98,99,100,101,102,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-74,68,-60,-65,-72,-73,-75,-76,-74,-80,-81,68,68,68,68,68,68,68,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'RPAREN':([30,39,41,42,43,44,45,50,53,64,69,70,71,72,73,74,84,86,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,119,120,121,122,123,124,128,129,130,131,132,133,134,135,136,137,138,139,141,143,144,149,158,166,172,173,181,191,],[-52,-60,-65,-72,-73,-75,-76,-5,94,-6,-6,112,-74,-6,-6,-6,-80,-81,-53,-54,-55,-56,-57,-58,-59,149,-83,-84,-61,-62,-63,-64,151,-77,152,153,154,-66,-67,-68,-69,-70,-71,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-4,161,-37,-79,-78,-82,-36,-38,-39,-30,]),'THEN':([30,39,41,42,43,44,45,71,75,84,86,96,97,98,99,100,101,102,107,108,109,110,112,119,120,121,122,123,124,149,158,],[-52,-60,-65,-72,-73,-75,-76,-74,116,-80,-81,-53,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,-79,-78,]),'DO':([30,39,41,42,43,44,45,71,76,84,86,96,97,98,99,100,101,102,107,108,109,110,112,119,120,121,122,123,124,149,158,177,178,],[-52,-60,-65,-72,-73,-75,-76,-74,117,-80,-81,-53,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,-79,-78,182,183,]),'COMMA':([30,39,41,42,43,44,45,49,50,53,64,69,71,72,73,74,84,86,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,119,120,121,122,123,124,141,145,149,158,164,166,],[-52,-60,-65,-72,-73,-75,-76,89,-5,89,-6,-6,-74,-6,-6,-6,-80,-81,-53,-54,-55,-56,-57,-58,-59,150,-83,-84,-61,-62,-63,-64,150,-77,150,150,150,-66,-67,-68,-69,-70,-71,-4,89,-79,-78,89,-82,]),'RBRACKET':([30,39,41,42,43,44,45,71,84,86,96,97,98,99,100,101,102,107,108,109,110,112,119,120,121,122,123,124,125,149,158,188,],[-52,-60,-65,-72,-73,-75,-76,-74,-80,-81,-53,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,158,-79,-78,189,]),'TO':([30,39,41,42,43,44,45,71,84,86,96,97,98,99,100,101,102,107,108,109,110,112,119,120,121,122,123,124,149,157,158,],[-52,-60,-65,-72,-73,-75,-76,-74,-80,-81,-53,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,-79,168,-78,]),'DOWNTO':([30,39,41,42,43,44,45,71,84,86,96,97,98,99,100,101,102,107,108,109,110,112,119,120,121,122,123,124,149,157,158,],[-52,-60,-65,-72,-73,-75,-76,-74,-80,-81,-53,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-77,-66,-67,-68,-69,-70,-71,-79,169,-78,]),'COLON':([49,50,51,90,92,141,145,161,164,],[88,-5,-6,142,-35,-4,163,-34,174,]),'INTEGER':([88,142,163,174,190,],[129,129,129,129,129,]),'REAL':([88,142,163,174,190,],[130,130,130,130,130,]),'BOOLEAN':([88,142,163,174,190,],[131,131,131,131,131,]),'CHAR':([88,142,163,174,190,],[132,132,132,132,132,]),'BYTE':([88,142,163,174,190,],[133,133,133,133,133,]),'WORD':([88,142,163,174,190,],[134,134,134,134,134,]),'LONGINT':([88,142,163,174,190,],[135,135,135,135,135,]),'SHORTINT':([88,142,163,174,190,],[136,136,136,136,136,]),'SINGLE':([88,142,163,174,190,],[137,137,137,137,137,]),'DOUBLE':([88,142,163,174,190,],[138,138,138,138,138,]),'ARRAY':([88,142,163,174,190,],[140,140,140,140,140,]),'OF':([189,],[190,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'header':([0,],[2,]),'block':([2,147,171,],[4,165,180,]),'declarations':([2,147,171,],[5,5,5,]),'empty':([2,13,51,52,55,64,69,72,73,74,116,117,147,167,171,182,183,],[6,28,92,92,28,106,106,106,106,106,28,28,6,28,6,28,28,]),'compound_statement':([5,13,55,116,117,167,182,183,],[9,23,23,23,23,23,23,23,]),'variable_declaration':([5,],[10,]),'function_declaration':([5,],[11,]),'procedure_declaration':([5,],[12,]),'statement_list':([13,],[19,]),'statement':([13,55,116,117,167,182,183,],[20,95,155,156,176,186,187,]),'assignment_statement':([13,55,116,117,167,182,183,],[21,21,21,21,21,21,21,]),'expression':([13,32,36,37,55,63,64,69,72,73,74,85,116,117,118,150,167,168,169,182,183,],[22,70,75,76,22,103,105,105,105,105,105,125,22,22,157,166,22,177,178,22,22,]),'io_statement':([13,55,116,117,167,182,183,],[24,24,24,24,24,24,24,]),'if_statement':([13,55,116,117,167,182,183,],[25,25,25,25,25,25,25,]),'while_statement':([13,55,116,117,167,182,183,],[26,26,26,26,26,26,26,]),'for_statement':([13,55,116,117,167,182,183,],[27,27,27,27,27,27,27,]),'additive_expression':([13,32,36,37,55,56,57,58,59,60,61,62,63,64,69,72,73,74,85,116,117,118,150,167,168,169,182,183,],[30,30,30,30,30,96,97,98,99,100,101,102,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'multiplicative_expression':([13,32,36,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,85,116,117,118,150,167,168,169,182,183,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,107,108,109,110,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'factor':([13,32,36,37,40,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,81,82,83,85,116,117,118,150,167,168,169,182,183,],[41,41,41,41,84,86,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,119,120,121,122,123,124,41,41,41,41,41,41,41,41,41,41,]),'variable_list':([14,],[47,]),'variable':([14,87,],[48,126,]),'id_list':([14,17,87,91,146,162,],[49,53,49,145,164,145,]),'parameter_list':([51,52,],[90,93,]),'expression_list':([64,69,72,73,74,],[104,111,113,114,115,]),'type':([88,142,163,174,190,],[127,160,173,181,191,]),'parameter_section_list':([91,],[143,]),'parameter_section':([91,162,],[144,172,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> header block DOT','program',3,'p_program','anasin.py',7),
  ('header -> PROGRAM ID LPAREN id_list RPAREN SEMICOLON','header',6,'p_header','anasin.py',12),
  ('header -> PROGRAM ID SEMICOLON','header',3,'p_header','anasin.py',13),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','anasin.py',23),
  ('id_list -> ID','id_list',1,'p_id_list','anasin.py',24),
  ('empty -> <empty>','empty',0,'p_empty','anasin.py',32),
  ('block -> declarations compound_statement','block',2,'p_block','anasin.py',37),
  ('declarations -> declarations variable_declaration','declarations',2,'p_declarations','anasin.py',42),
  ('declarations -> declarations function_declaration','declarations',2,'p_declarations','anasin.py',43),
  ('declarations -> declarations procedure_declaration','declarations',2,'p_declarations','anasin.py',44),
  ('declarations -> empty','declarations',1,'p_declarations','anasin.py',45),
  ('variable_declaration -> VAR variable_list SEMICOLON','variable_declaration',3,'p_variable_declaration','anasin.py',57),
  ('function_declaration -> FUNCTION ID parameter_list COLON type SEMICOLON block SEMICOLON','function_declaration',8,'p_function_declaration','anasin.py',63),
  ('procedure_declaration -> PROCEDURE ID parameter_list SEMICOLON block SEMICOLON','procedure_declaration',6,'p_procedure_declaration','anasin.py',71),
  ('variable_list -> variable_list SEMICOLON variable','variable_list',3,'p_variable_list','anasin.py',80),
  ('variable_list -> variable','variable_list',1,'p_variable_list','anasin.py',81),
  ('variable -> id_list COLON type','variable',3,'p_variable','anasin.py',91),
  ('type -> ID','type',1,'p_type','anasin.py',96),
  ('type -> INTEGER','type',1,'p_type','anasin.py',97),
  ('type -> REAL','type',1,'p_type','anasin.py',98),
  ('type -> BOOLEAN','type',1,'p_type','anasin.py',99),
  ('type -> CHAR','type',1,'p_type','anasin.py',100),
  ('type -> BYTE','type',1,'p_type','anasin.py',101),
  ('type -> WORD','type',1,'p_type','anasin.py',102),
  ('type -> LONGINT','type',1,'p_type','anasin.py',103),
  ('type -> SHORTINT','type',1,'p_type','anasin.py',104),
  ('type -> SINGLE','type',1,'p_type','anasin.py',105),
  ('type -> DOUBLE','type',1,'p_type','anasin.py',106),
  ('type -> STRING','type',1,'p_type','anasin.py',107),
  ('type -> ARRAY LBRACKET NUMBER DOT DOT NUMBER RBRACKET OF type','type',9,'p_type','anasin.py',108),
  ('field_list -> field_list SEMICOLON field','field_list',3,'p_field_list','anasin.py',120),
  ('field_list -> field','field_list',1,'p_field_list','anasin.py',121),
  ('field -> id_list COLON type','field',3,'p_field','anasin.py',131),
  ('parameter_list -> LPAREN parameter_section_list RPAREN','parameter_list',3,'p_parameter_list','anasin.py',136),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','anasin.py',137),
  ('parameter_section_list -> parameter_section_list SEMICOLON parameter_section','parameter_section_list',3,'p_parameter_section_list','anasin.py',147),
  ('parameter_section_list -> parameter_section','parameter_section_list',1,'p_parameter_section_list','anasin.py',148),
  ('parameter_section -> id_list COLON type','parameter_section',3,'p_parameter_section','anasin.py',158),
  ('parameter_section -> VAR id_list COLON type','parameter_section',4,'p_parameter_section','anasin.py',159),
  ('compound_statement -> BEGIN statement_list END','compound_statement',3,'p_compound_statement','anasin.py',169),
  ('statement_list -> statement_list SEMICOLON statement','statement_list',3,'p_statement_list','anasin.py',174),
  ('statement_list -> statement','statement_list',1,'p_statement_list','anasin.py',175),
  ('statement -> assignment_statement','statement',1,'p_statement','anasin.py',185),
  ('statement -> expression','statement',1,'p_statement','anasin.py',186),
  ('statement -> compound_statement','statement',1,'p_statement','anasin.py',187),
  ('statement -> io_statement','statement',1,'p_statement','anasin.py',188),
  ('statement -> if_statement','statement',1,'p_statement','anasin.py',189),
  ('statement -> while_statement','statement',1,'p_statement','anasin.py',190),
  ('statement -> for_statement','statement',1,'p_statement','anasin.py',191),
  ('statement -> empty','statement',1,'p_statement','anasin.py',192),
  ('assignment_statement -> ID ASSIGN expression','assignment_statement',3,'p_assignment_statement','anasin.py',197),
  ('expression -> additive_expression','expression',1,'p_expression','anasin.py',203),
  ('expression -> expression EQUALS additive_expression','expression',3,'p_expression','anasin.py',204),
  ('expression -> expression NE additive_expression','expression',3,'p_expression','anasin.py',205),
  ('expression -> expression LT additive_expression','expression',3,'p_expression','anasin.py',206),
  ('expression -> expression GT additive_expression','expression',3,'p_expression','anasin.py',207),
  ('expression -> expression LE additive_expression','expression',3,'p_expression','anasin.py',208),
  ('expression -> expression GE additive_expression','expression',3,'p_expression','anasin.py',209),
  ('expression -> expression IN additive_expression','expression',3,'p_expression','anasin.py',210),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','anasin.py',220),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','anasin.py',221),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','anasin.py',222),
  ('additive_expression -> additive_expression OR multiplicative_expression','additive_expression',3,'p_additive_expression','anasin.py',223),
  ('additive_expression -> additive_expression ORELSE multiplicative_expression','additive_expression',3,'p_additive_expression','anasin.py',224),
  ('multiplicative_expression -> factor','multiplicative_expression',1,'p_multiplicative_expression','anasin.py',234),
  ('multiplicative_expression -> multiplicative_expression TIMES factor','multiplicative_expression',3,'p_multiplicative_expression','anasin.py',235),
  ('multiplicative_expression -> multiplicative_expression DIVIDE factor','multiplicative_expression',3,'p_multiplicative_expression','anasin.py',236),
  ('multiplicative_expression -> multiplicative_expression DIV factor','multiplicative_expression',3,'p_multiplicative_expression','anasin.py',237),
  ('multiplicative_expression -> multiplicative_expression MOD factor','multiplicative_expression',3,'p_multiplicative_expression','anasin.py',238),
  ('multiplicative_expression -> multiplicative_expression AND factor','multiplicative_expression',3,'p_multiplicative_expression','anasin.py',239),
  ('multiplicative_expression -> multiplicative_expression ANDTHEN factor','multiplicative_expression',3,'p_multiplicative_expression','anasin.py',240),
  ('factor -> NUMBER','factor',1,'p_factor','anasin.py',250),
  ('factor -> STRING','factor',1,'p_factor','anasin.py',251),
  ('factor -> ID','factor',1,'p_factor','anasin.py',252),
  ('factor -> TRUE','factor',1,'p_factor','anasin.py',253),
  ('factor -> FALSE','factor',1,'p_factor','anasin.py',254),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','anasin.py',255),
  ('factor -> factor LBRACKET expression RBRACKET','factor',4,'p_factor','anasin.py',256),
  ('factor -> ID LPAREN expression_list RPAREN','factor',4,'p_factor','anasin.py',257),
  ('factor -> MINUS factor','factor',2,'p_factor','anasin.py',258),
  ('factor -> NOT factor','factor',2,'p_factor','anasin.py',259),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','anasin.py',289),
  ('expression_list -> expression','expression_list',1,'p_expression_list','anasin.py',290),
  ('expression_list -> empty','expression_list',1,'p_expression_list','anasin.py',291),
  ('io_statement -> WRITE LPAREN expression_list RPAREN','io_statement',4,'p_io_statement','anasin.py',301),
  ('io_statement -> WRITELN LPAREN expression_list RPAREN','io_statement',4,'p_io_statement','anasin.py',302),
  ('io_statement -> READ LPAREN expression_list RPAREN','io_statement',4,'p_io_statement','anasin.py',303),
  ('io_statement -> READLN LPAREN expression_list RPAREN','io_statement',4,'p_io_statement','anasin.py',304),
  ('if_statement -> IF expression THEN statement ELSE statement','if_statement',6,'p_if_statement','anasin.py',309),
  ('if_statement -> IF expression THEN statement','if_statement',4,'p_if_statement','anasin.py',310),
  ('while_statement -> WHILE expression DO statement','while_statement',4,'p_while_statement','anasin.py',320),
  ('for_statement -> FOR ID ASSIGN expression TO expression DO statement','for_statement',8,'p_for_statement','anasin.py',325),
  ('for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement','for_statement',8,'p_for_statement','anasin.py',326),
]
